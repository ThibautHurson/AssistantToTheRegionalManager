version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=taskmanager
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-aof
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/redis-data                     # Redis data dir (persistent)
      - ./redis.conf:/usr/local/etc/redis/redis.conf  # Mount custom config
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    stop_grace_period: 30s
    stop_signal: SIGTERM

  fastapi:
    build: .
    env_file: .env
    container_name: fastapi-app
    depends_on:
      - redis
      - postgres
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379  # IMPORTANT: Use the *service name* not localhost
      - FASTAPI_URI=http://fastapi:8000
      - REDIRECT_URI=http://localhost:8000/oauth2callback
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=taskmanager
    volumes:
      - .:/app
    command: ["uvicorn", "backend.assistant_app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
        interval: 30s
        timeout: 10s
        retries: 3
        
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    env_file: .env
    container_name: streamlit-chatbot
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    environment:
      - FASTAPI_URI=http://fastapi:8000
    depends_on:
      - fastapi

volumes:
  postgres_data: